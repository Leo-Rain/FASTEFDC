import numpy as np
import Read as rd
import globalvalue as gb
import Tools as tl
##############################
DT=0.349903 #一个时间步的长度
DTDN=100 #时间步数
IC=55 #列
AHO=0 #水平黏性扩散系数
AHD=1 #控制水平扩散
AVO=0.000001 #垂直黏性扩散系数
JC=15 #行
KC=3  #层数
LC=563 #一头一尾
LVC=561 #真实网格
DZC=np.array([0.333,0.3333,0.3333])
NQSIJ=11
NPSIJ=11
N=1
Cell=np.zeros((IC,JC))
IL=np.arange(LC)
JL=np.arange(LC)
LCT=np.arange(LC)
LNC=np.arange(LC)
LSC=np.arange(LC)
LIJ=np.zeros((IC+1,JC+1),dtype=np.int32)
UV=np.arange(LC,dtype=np.float)
U1V=np.arange(LC,dtype=np.float)
VU=np.arange(LC,dtype=np.float)
V1U=np.arange(LC,dtype=np.float)
AH=np.zeros((LC,KC),dtype=np.float)
SNLT=1
Du=np.zeros((LC,KC),dtype=np.float)
Dv=np.zeros((LC,KC),dtype=np.float)
CDZR=np.arange(KC,dtype=np.float)
CDZD=np.arange(KC,dtype=np.float)
SPB=np.arange(LC)
SPB[:]=1
LBERC=np.arange(NPSIJ+NQSIJ)
LBNRC=np.arange(NPSIJ+NQSIJ)
gb._init()
gb.set_value('LBERC',LBERC)
gb.set_value('LBNRC',LBNRC)
gb.set_value('SPB',SPB)
gb.set_value('CDZR',CDZR)
gb.set_value('CDZD',CDZD)
gb.set_value('Du',Du)
gb.set_value('Dv',Dv)
gb.set_value('SNLT',SNLT)
gb.set_value('KC',KC)
gb.set_value('N',N)
gb.set_value('NQSIJ',NQSIJ)
gb.set_value('NPSIJ',NPSIJ)
gb.set_value('AH',AH)
gb.set_value('AHD',AHD)
gb.set_value('Cell',Cell)
gb.set_value('IC',IC)
gb.set_value('JC',JC)
gb.set_value('LC',LC)
gb.set_value('LVC',LVC)
gb.set_value('IL',IL)
gb.set_value('JL',JL)
gb.set_value('LCT',LCT)
gb.set_value('LNC',LNC)
gb.set_value('LSC',LSC)
gb.set_value('LIJ',LIJ)
gb.set_value('UV',UV)
gb.set_value('VU',VU)
gb.set_value('U1V',U1V)
gb.set_value('V1U',V1U)
gb.set_value('DT',DT)
gb.set_value('DZC',DZC)
gb.set_value('AHO',AHO)
gb.set_value('AVO',AVO)
################################
###开始
########################
###读取文件部分
rd.Read_cell(IC,JC)
rd.Read_dxdy(IC,JC)
rd.Read_lxly(IC,JC)
rd.Read_Qser(1,KC)
tl.Cal_LCT_IL_JL(IC,JC,LC)
tl.Cal_Dx_Dy_HM(IC,JC,LC)
rd.Read_Qinp(NQSIJ)
rd.Read_Pinp(NPSIJ)
tl.Cal_Sub_Svb(IC,JC,LC)
tl.Cal_reset_Dx_Dy_Rss(IC,JC,LC)
tl.Cal_CDZC(KC)
#处理QSER,MQSER
################################################
#初始化 一部分变量
W=np.zeros((LC,KC),dtype=np.float)
W1=np.zeros((LC,KC),dtype=np.float)
U=np.zeros((LC,KC),dtype=np.float)
V=np.zeros((LC,KC),dtype=np.float)
UHDYE=np.arange(LC,dtype=np.float)
UHDYE[:]=0
VHDXE=np.arange(LC,dtype=np.float)
VHDXE[:]=0
UHDY=np.zeros((LC,KC),dtype=np.float)
UHDY[:]=0
VHDX=np.zeros((LC,KC),dtype=np.float)
VHDX[:]=0
UHDY1=UHDY.copy()
VHDX1=VHDX.copy()
U2=np.zeros((LC,KC),dtype=np.float)
V2=np.zeros((LC,KC),dtype=np.float)
W2=np.zeros((LC,KC),dtype=np.float)
UHE=np.arange(LC,dtype=np.float)
VHE=np.arange(LC,dtype=np.float)
FUHU=np.zeros((LC,KC),dtype=np.float)
FUHV=np.zeros((LC,KC),dtype=np.float)
FVHU=np.zeros((LC,KC),dtype=np.float)
FVHV=np.zeros((LC,KC),dtype=np.float)
FWU=np.zeros((LC,KC),dtype=np.float)
FWV=np.zeros((LC,KC),dtype=np.float)
QSUME=np.arange(LC,dtype=np.float)
QSUME[:]=0
QSUM1E=np.arange(LC,dtype=np.float)
QSUM1E[:]=0
QSUM=np.zeros((LC,KC),dtype=np.float)
CU1=np.zeros((LC,KC),dtype=np.float)
CU2=np.zeros((LC,KC),dtype=np.float)
UUU=np.zeros((LC,KC),dtype=np.float)
VVV=np.zeros((LC,KC),dtype=np.float)
AAU=np.arange(LC,dtype=np.float)
AAV=np.arange(LC,dtype=np.float)
BBU=np.arange(LC,dtype=np.float)
BBV=np.arange(LC,dtype=np.float)
gb.set_value('AAU',AAU)
gb.set_value('AAV',AAV)
gb.set_value('BBU',BBU)
gb.set_value('BBV',BBV)
gb.set_value('UUU',UUU)
gb.set_value('VVV',VVV)
gb.set_value('CU1',CU1)
gb.set_value('CU2',CU2)
gb.set_value('QSUME',QSUME)
gb.set_value('QSUM1E',QSUM1E)
gb.set_value('QSUM',QSUM)
gb.set_value('U2',U2)
gb.set_value('V2',V2)
gb.set_value('W2',W2)
gb.set_value('UHE',UHE)
gb.set_value('VHE',VHE)
gb.set_value('FWU',FWU)
gb.set_value('FWV',FWV)
gb.set_value('FUHU',FUHU)
gb.set_value('FUHV',FUHV)
gb.set_value('FVHU',FVHU)
gb.set_value('FVHV',FVHV)
gb.set_value('W',W)
gb.set_value('W1',W1)
gb.set_value('U',U)
gb.set_value('V',V)
gb.set_value('UHDYE',UHDYE)
gb.set_value('VHDXE',VHDXE)
gb.set_value('UHDY',UHDY)
gb.set_value('VHDX',VHDX)
gb.set_value('UHDY1',UHDY1)
gb.set_value('VHDX1',VHDX1)
#######################################
#弗劳德数
CFLUUU=np.zeros((LC,KC),dtype=np.float)
CFLVVV=np.zeros((LC,KC),dtype=np.float)
CFLWWW=np.zeros((LC,KC),dtype=np.float)
CFLCAC=np.zeros((LC,KC),dtype=np.float)
######################################
ICORDYU=np.arange(LC)
ICORDXV=np.arange(LC)
gb.set_value('ICORDYU',ICORDYU)
gb.set_value('ICORDXV',ICORDXV)
####################################
Dxu1=np.zeros((LC,KC),dtype=np.float)#Cal_HDMF
Dyv1=np.zeros((LC,KC),dtype=np.float)
Dyu1=np.zeros((LC,KC),dtype=np.float)
Dxv1=np.zeros((LC,KC),dtype=np.float)
Sxy=np.zeros((LC,KC),dtype=np.float)
gb.set_value('Dxu1',Dxu1)
gb.set_value('Dyv1',Dyv1)
gb.set_value('Dyu1',Dyu1)
gb.set_value('Dxv1',Dxv1)
gb.set_value('Sxy',Sxy)
FMDUX=np.zeros((LC,KC),dtype=np.float)
FMDUY=np.zeros((LC,KC),dtype=np.float)
FMDVX=np.zeros((LC,KC),dtype=np.float)
FMDVY=np.zeros((LC,KC),dtype=np.float)
FCAX=np.zeros((LC,KC),dtype=np.float)
FCAY=np.zeros((LC,KC),dtype=np.float)
FCAXE=np.arange(LC,dtype=np.float)#科氏力
FCAYE=np.arange(LC,dtype=np.float)#科氏力
FXE=np.arange(LC,dtype=np.float)
FX=np.zeros((LC,KC),dtype=np.float)
FY=np.zeros((LC,KC),dtype=np.float)
FYE=np.arange(LC,dtype=np.float)
gb.set_value('FCAX',FCAX)
gb.set_value('FCAY',FCAY)
gb.set_value('FX',FX)
gb.set_value('FY',FY)
gb.set_value('FCAXE',FCAXE)
gb.set_value('FCAYE',FCAYE)
gb.set_value('FXE',FXE)
gb.set_value('FYE',FYE)
gb.set_value('FMDUX',FMDUX)
gb.set_value('FMDUY',FMDUY)
gb.set_value('FMDVX',FMDVX)
gb.set_value('FMDVY',FMDVY)
Dxu1=np.zeros((LC,KC),dtype=np.float)
Dyv1=np.zeros((LC,KC),dtype=np.float)
Dyu1=np.zeros((LC,KC),dtype=np.float)
Dxv1=np.zeros((LC,KC),dtype=np.float)
Sxy=np.zeros((LC,KC),dtype=np.float)
gb.set_value('Dxu1',Dxu1)
gb.set_value('Dyv1',Dyv1)
gb.set_value('Dyu1',Dyu1)
gb.set_value('Dxv1',Dxv1)
gb.set_value('Sxy',Sxy)
TBX=np.arange(LC,dtype=np.float)
TBX[:]=0
TBY=np.arange(LC,dtype=np.float)
TBY[:]=0
TSY=np.arange(LC,dtype=np.float)
TSY[:]=0
TSX=np.arange(LC,dtype=np.float)
TSX[:]=0
gb.set_value('TBX',TBX)
gb.set_value('TBY',TBY)
gb.set_value('TSX',TSX)
gb.set_value('TSY',TSY)
###############################################
##########水深流动偏差
DT2=DT/2
gb.set_value('DT2',DT2)
######################
########计算Av
#######################
FUHDYE=np.arange(LC,dtype=np.float)
FVHDXE=np.arange(LC,dtype=np.float)
gb.set_value('FUHDYE',FUHDYE)
gb.set_value('FVHDXE',FVHDXE)
#####################################
####HDMT2
tl.Reset_1V()#H1p H1u H1v UHDY1E VHDX1E U1 V1 UHDY1 VHDX1
tl.Cal_UV_VU(IC,JC,KC,LC)
tl.Cal_init_STBXY(IC,JC,KC,LC)
tl.Cal_STBXY(IC,JC,LC)
tl.Cal_HDMF(IC,JC,LC,KC)
N=1
#SET BOTTOM AND SURFACE TURBULENT INTENSITY SQUARED
for i in range(DTDN):
    tl.Cal_Exp2T(IC,JC,LC,KC)
    tl.Cal_QVS(IC,JC,LC,KC)
    tl.Cal_External(IC,JC,LC,KC)
    tl.Reset_2V()##倒一下变量
    tl.Cal_UVW(IC,JC,KC,LC)
    tl.Cal_UV_VU_2(IC,JC,KC,LC)
    tl.Cal_STBXY(IC,JC,LC)
    tl.Cal_HDMF(IC,JC,LC,KC)
    Hp=gb.get_value('Hp')
    if(N==19):
        print(N)
    N+=1
    Hp=gb.get_value('Hp')
    print(Hp)
    print(N)
###############################
